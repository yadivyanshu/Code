// example of comparator sort_____451. Sort Characters By Frequency
    int counts[256] = {0};
        for (char ch : s)
            ++counts[ch];
        sort(s.begin(), s.end(), [&](char a, char b) { 
            return counts[a] > counts[b] || (counts[a] == counts[b] && a < b); 
        });
    return s;
    

https://leetcode.com/problems/minimum-number-of-arrows-to-burst-balloons/description/
class Solution {
public:
    int findMinArrowShots(vector<vector<int>>& points) {
        sort(points.begin(), points.end(),[](vector<int>& a, vector<int>& b){return a[1] < b[1];});  // comparator to sort points pair
        int overlap = 0, i = 0, n = points.size();
        while(i < n) {
            int cur = points[i][1];
            while(i+1 < n && points[i+1][0] <= cur) {
                i++;
                overlap++;
            }
            i++;
        }
        return n - overlap;
    }
};

https://stackoverflow.com/questions/23981326/implementation-of-lower-bound-on-vector-pairs
sort(v.begin(),v.end());
auto id = distance(v.begin(), lower_bound(v.begin(),v.end(), 
       make_pair(5, numeric_limits<int>::min())) );

-> In C++, cin.get() is a function used to extract a single character from the input stream. The expression cin.get() == 10 checks if the character obtained from cin.get() is equal to the ASCII value 10, which represents the newline character ('\n').

So, this expression is checking if the character input from the user is a newline character. If the user presses the "Enter" key, which generates a newline character in most cases, this condition will evaluate to true.
Reference: https://codeforces.com/contest/52/submission/205192054
